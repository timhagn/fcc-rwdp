{"version":3,"sources":["../tdp.js"],"names":["projectName","localStorage","setItem","getStyle","className","styleSheets","window","document","Object","values","forEach","styleSheet","rules","cssRules","classes","currentClass","selectorText","ret","cssText","style","indexOf","rulesForCssText","styleContent","doc","implementation","createHTMLDocument","styleElement","createElement","textContent","body","appendChild","console","log","sheet","getBackgroundStylesForSingleClass","cssStyleRules","length","keys","filter","k","reduce","newData","getBackgroundStyles","includes","split","classObjects","item","push","assign"],"mappings":";;AAAA,IAAMA,WAAW,GAAG,qBAApB;AACAC,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwC,qBAAxC;AAEA;;;;;;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,SAAS,EAAI;AAC5B,MAAMC,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBF,WAApC;AAEAG,EAAAA,MAAM,CAACC,MAAP,CAAcJ,WAAd,EAA2BK,OAA3B,CAAmC,UAAAC,UAAU,EAAI;AAC/C,QAAI,OAAOA,UAAU,CAACC,KAAlB,KAA6B,WAA7B,IACA,OAAOD,UAAU,CAACE,QAAlB,KAAgC,WADpC,EACiD;AAC/C,UAAMC,OAAO,GAAGH,UAAU,CAACC,KAAX,IAAoBD,UAAU,CAACE,QAA/C;AACAL,MAAAA,MAAM,CAACC,MAAP,CAAcK,OAAd,EAAuBJ,OAAvB,CAA+B,UAAAK,YAAY,EAAI;AAC7C,YAAIA,YAAY,CAACC,YAAb,KAA8BZ,SAAlC,EAA6C;AAC3C,cAAIa,GAAJ;;AACA,cAAIF,YAAY,CAACG,OAAjB,EAA0B;AACxBD,YAAAA,GAAG,GAAGF,YAAY,CAACG,OAAnB;AACD,WAFD,MAGK;AACHD,YAAAA,GAAG,GAAGF,YAAY,CAACI,KAAb,CAAmBD,OAAzB;AACD;;AACD,cAAID,GAAG,CAACG,OAAJ,CAAYL,YAAY,CAACC,YAAzB,MAA2C,CAAC,CAAhD,EAAmD;AACjDC,YAAAA,GAAG,GAAGF,YAAY,CAACC,YAAb,GAA4B,GAA5B,GAAkCC,GAAlC,GAAwC,GAA9C;AACD;;AACD,iBAAOA,GAAP;AACD;AACF,OAdD;AAeD;AACF,GApBD;AAqBD,CAxBD;;AA0BA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,YAAV,EAAwB;AAC9C,MAAMC,GAAG,GAAGhB,QAAQ,CAACiB,cAAT,CAAwBC,kBAAxB,CAA2C,EAA3C,CAAZ;AAAA,MACIC,YAAY,GAAGnB,QAAQ,CAACoB,aAAT,CAAuB,OAAvB,CADnB;AAGAD,EAAAA,YAAY,CAACE,WAAb,GAA2BN,YAA3B,CAJ8C,CAK9C;;AACAC,EAAAA,GAAG,CAACM,IAAJ,CAASC,WAAT,CAAqBJ,YAArB;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAY,CAACO,KAAzB;AAEA,SAAOP,YAAY,CAACO,KAAb,CAAmBpB,QAA1B;AACD,CAXD;;AAaA,IAAMqB,iCAAiC,GAAG,SAApCA,iCAAoC,CAAA9B,SAAS,EAAI;AACrD,MAAMe,KAAK,GAAGhB,QAAQ,YAAKC,SAAL,EAAtB;AACA,MAAM+B,aAAa,GAAGd,eAAe,CAACF,KAAD,CAArC;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY5B,SAAZ,EAAuBe,KAAvB,EAA8BgB,aAA9B;;AACA,MAAIA,aAAa,CAACC,MAAd,GAAuB,CAAvB,IACA,OAAOD,aAAa,CAAC,CAAD,CAAb,CAAiBhB,KAAxB,KAAmC,WADvC,EACoD;AAClD;AACA,WAAOX,MAAM,CAAC6B,IAAP,CAAYF,aAAa,CAAC,CAAD,CAAb,CAAiBhB,KAA7B,EACFmB,MADE,CACK,UAAAC,CAAC;AAAA,aACLA,CAAC,CAACnB,OAAF,CAAU,YAAV,MAA4B,CAA5B,IAAiCe,aAAa,CAAC,CAAD,CAAb,CAAiBhB,KAAjB,CAAuBoB,CAAvB,MAA8B,EAD1D;AAAA,KADN,EAGFC,MAHE,CAGK,UAACC,OAAD,EAAUF,CAAV,EAAgB;AACtBE,MAAAA,OAAO,CAACF,CAAD,CAAP,GAAaJ,aAAa,CAAC,CAAD,CAAb,CAAiBhB,KAAjB,CAAuBoB,CAAvB,CAAb;AACA,aAAOE,OAAP;AACD,KANE,EAMA,EANA,CAAP;AAOD;;AACD,SAAO,EAAP;AACD,CAhBD;;AAkBA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAtC,SAAS,EAAI;AACvC,MAAIA,SAAS,CAACuC,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;AAC3B,QAAM7B,OAAO,GAAGV,SAAS,CAACwC,KAAV,CAAgB,GAAhB,CAAhB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA/B,IAAAA,OAAO,CAACJ,OAAR,CAAgB,UAAAoC,IAAI;AAAA,aAChBD,YAAY,CAACE,IAAb,CAAkBb,iCAAiC,CAACY,IAAD,CAAnD,CADgB;AAAA,KAApB;AAGA,WAAOtC,MAAM,CAACwC,MAAP,OAAAxC,MAAM,EAAWqC,YAAX,CAAb;AACD;;AACD,SAAOX,iCAAiC,CAAC9B,SAAD,CAAxC;AACD,CAVD;;AAYAsC,mBAAmB,CAAC,SAAD,CAAnB","sourcesContent":["const projectName = 'technical-docs-page';\nlocalStorage.setItem('example_project', 'Technical Docs Page');\n\n/**\n * Gets styles by a classname\n *\n * @notice The className must be 1:1 the same as in the CSS\n * @param className string\n */\nconst getStyle = className => {\n  const styleSheets = window.document.styleSheets;\n\n  Object.values(styleSheets).forEach(styleSheet => {\n    if (typeof(styleSheet.rules) !== 'undefined' ||\n        typeof(styleSheet.cssRules) !== 'undefined') {\n      const classes = styleSheet.rules || styleSheet.cssRules;\n      Object.values(classes).forEach(currentClass => {\n        if (currentClass.selectorText === className) {\n          let ret;\n          if (currentClass.cssText) {\n            ret = currentClass.cssText;\n          }\n          else {\n            ret = currentClass.style.cssText;\n          }\n          if (ret.indexOf(currentClass.selectorText) === -1) {\n            ret = currentClass.selectorText + \"{\" + ret + \"}\";\n          }\n          return ret;\n        }\n      })\n    }\n  })\n}\n\nconst rulesForCssText = function (styleContent) {\n  const doc = document.implementation.createHTMLDocument(\"\"),\n      styleElement = document.createElement(\"style\");\n\n  styleElement.textContent = styleContent;\n  // the style will only be parsed once it is added to a document\n  doc.body.appendChild(styleElement);\n\n  console.log(styleElement.sheet)\n\n  return styleElement.sheet.cssRules;\n};\n\nconst getBackgroundStylesForSingleClass = className => {\n  const style = getStyle(`.${className}`)\n  const cssStyleRules = rulesForCssText(style)\n  console.log(className, style, cssStyleRules)\n  if (cssStyleRules.length > 0 &&\n      typeof(cssStyleRules[0].style) !== 'undefined') {\n    // Filter out background(-*) rules that contain a definition.\n    return Object.keys(cssStyleRules[0].style)\n        .filter(k =>\n            k.indexOf('background') === 0 && cssStyleRules[0].style[k] !== '')\n        .reduce((newData, k) => {\n          newData[k] = cssStyleRules[0].style[k]\n          return newData\n        }, {})\n  }\n  return {}\n}\n\nconst getBackgroundStyles = className => {\n  if (className.includes(' ')) {\n    const classes = className.split(' ')\n    let classObjects = []\n    classes.forEach(item =>\n        classObjects.push(getBackgroundStylesForSingleClass(item))\n    )\n    return Object.assign(...classObjects)\n  }\n  return getBackgroundStylesForSingleClass(className)\n}\n\ngetBackgroundStyles('#navbar')\n\n\n\n\n"],"file":"tdp.js"}